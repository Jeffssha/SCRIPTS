#!/bin/bash
source cabecalho
#######VARIAVEIS#########
dir="/etc/adm-lite"
teste_socket () {
unset pass
teste_sok=$(lsof -i tcp:$1)
if [ "$teste_sok" = "" ]; then
pass="OK"
return
 else
pass=$(echo "$teste_sok" | awk '{print $1}' | tail -1)
fi
}

ver_socks () {
echo -ne "$c"
var=$(netstat -nltp | grep python |awk -F "/" '{print $1}')
echo -e "${cor[2]}=≠=≈=≠=≈=≠=≈==≠=≈=≠=≈=≠=≈=≠=≈=≠=≈=≠=≈=≠=≈=≠=≈=≠=≈=≠=≈=≠=≠=≈=≠=≈=≠=≈=≠=≈=≠=≈=≠=≈=≠=≈="
if [ "$var" != "" ]; then
echo -e "\033[1;32m${var}"
 else
echo -e "\033[1;32m${txt[257]}"
fi
echo -e "${cor[2]}=≠=≈=≠=≈=≠=≈==≠=≈=≠=≈=≠=≈=≠=≈=≠=≈=≠=≈=≠=≈=≠=≈=≠=≈=≠=≈=≠=≠=≈=≠=≈=≠=≈=≠=≈=≠=≈=≠=≈=≠=≈="
}

parar_socks () {
echo -e "${cor[1]} =================================== ${cor[0]}"
echo -e "${b} ${txt[237]}"
pid=$(ps x | grep "get.py" | grep -v grep | awk '{print $1}')
if [ "$pid" != "" ]; then
for pids in $(echo $pid); do
kill -9 $pids > /dev/null 2>&1
done
fi
pidproxy=$(ps x | grep "proxypub.py" | grep -v "grep" | awk -F "pts" '{print $1}')
kill -9 $pidproxy > /dev/null 2>&1
pidproxy2=$(ps x | grep "proxypriv.py" | grep -v "grep" | awk -F "pts" '{print $1}')
kill -9 $pidproxy2 > /dev/null 2>&1
sleep 2s
echo -e " ${txt[237]}"
}

ligar_proxy () {
cd $dir
while true; do
echo -e "${cor[1]} =================================== ${cor[0]}"
echo -e "${b} ${txt[239]}"
echo -e "${b}  ${txt[240]}"
echo -e "${cor[1]} =================================== ${cor[0]}"
read -p " ${txt[9]} " porta_socket
teste_socket $porta_socket
if [ "$pass" = "OK" ]; then
break
 else
echo -e "${b} ${txt[241]} ${cor[2]} $pass"
echo -e "${b} ${txt[242]}"
echo -e "${b} ${txt[243]} ${cor[2]}$porta_socket ${b}${txt[244]} ${c}"
read -p " ${txt[245]}"
fi
done
echo -e "${b} ${txt[246]} ${cor[4]}"
read -p " ${txt[9]} " texto_soket
echo -e "${b} ${txt[247]}"
echo -e "\033[1;31m [ 1 ]• \033[1;33m${txt[248]}"
echo -e "\033[1;31m [ 2 ]• \033[1;33m${txt[249]} ${cor[4]}"
unset portproxy
read -p " ${txt[9]} " portproxy
if [ "$portproxy" = "1" ]; then
screen -dmS screen python ./proxypub.py "$porta_socket" "$texto_soket"
 else
meu_ip
screen -dmS screen python3 ./proxypriv.py "$porta_socket" "$texto_soket" "$IP"
fi
echo -e "${cor[1]} =================================== ${cor[0]}"
sleep 3s
unset pass
teste_socket $porta_socket
if [ "$pass" = "OK" ]; then
echo -e "${cor[2]} ${txt[250]}"
 else
echo -e "${c} ${txt[251]}, $pass : $porta_socket"
fi
}

start_natura () {
cd $dir
echo -e "${cor[3]} ${txt[272]}"
read -p " => " portas
teste_socket $portas
if [ "$pass" != "OK" ]; then
echo -e "\033[1;31m ${txt[273]} $pass"
return
fi
sed -s "s;CONFIG_LISTENING = '0.0.0.0:8799';CONFIG_LISTENING = '0.0.0.0:$portas';g" ./get > ./get.py
screen -dmS screen python ./get.py
sleep 1s
rm ./get.py
if [ "$(ps x | grep get.py | grep -v grep | awk '{print $1}')" != "" ]; then
echo ""
echo -e "${cor[3]} ${txt[275]}"
echo -e "${cor[3]} ${txt[274]} \033[1;32m ADMMANAGER"
sleep 1s
 else
echo ""
echo -e "${cor[3]} ${txt[276]}"
sleep 1s
fi
}

proxy_soks () {
b="\033[1;33m"
c="\033[1;32m"
while true; do
cd $dir
echo -e "${cor[1]} =================================== ${cor[0]}"
echo -e "${cor[2]} ${txt[252]}"
echo -e "${cor[1]} =================================== ${cor[0]}"
echo -e "${cor[2]} |0|•${cor[4]} ${txt[13]}"
echo -e "${cor[2]} |1|•${cor[3]} ${txt[253]}"
echo -e "${cor[2]} |2|•${cor[3]} ${txt[254]}"
echo -e "${cor[2]} |3|•${cor[3]} ${txt[255]}"
echo -e "${cor[2]} |4|•${cor[3]} ${txt[271]}"
echo -e "${cor[2]} |5|•${cor[3]} ${txt[304]}"
echo -e "${cor[1]} =================================== ${cor[0]}"
read -p " ${txt[9]} " optchange
case $optchange in
0)
break
;;
1)
ligar_proxy
;;
2)
parar_socks
;;
3)
ver_socks
;;
4)
start_natura
;;
5)
./overtcp
;;
esac
done
return
}


#######CODIGOS##########
echo -e "${cor[1]} =================================== ${cor[0]}"
echo -e "${cor[2]} ∆ ${cor[5]} ${txt[4]}"
echo -e "${cor[1]} =================================== ${cor[0]}"
echo -e "${cor[2]} |0|•${cor[4]} ${txt[13]}"
echo -e "${cor[2]} |1|•${cor[3]} ${txt[5]}"
echo -e "${cor[2]} |2|•${cor[3]} ${txt[6]}"
echo -e "${cor[2]} |3|•${cor[3]} ${txt[7]}"
echo -e "${cor[2]} |4|•${cor[4]} ${txt[8]}"
echo -e "${cor[2]} |5|•${cor[3]} ${txt[12]}"
echo -e "${cor[2]} |6|•${cor[3]} ${txt[20]} $VERIFICAR_PID"
echo -e "${cor[2]} |7|•${cor[3]} ${txt[26]}"
echo -e "${cor[2]} |8|•${cor[3]} ${txt[256]}"
echo -e "${cor[2]} |9|•${cor[3]} ${txt[290]} ${bot}"
echo -e "${cor[2]} |10|•${cor[3]} ${txt[291]}"
echo -e "${cor[1]} ===================================  ${cor[0]}"
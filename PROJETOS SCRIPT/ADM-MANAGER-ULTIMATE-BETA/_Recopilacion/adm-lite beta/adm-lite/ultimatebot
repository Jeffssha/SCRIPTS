#!/bin/bash
apt-get install jq -y > /dev/null 2>&1

#VARIAVEL ENTRADA TOKEN
[[ "$1" = "" ]] && exit 1

#IMPORTANDO API
source ShellBot.sh

ShellBot.init --token "$1"
ShellBot.username

#ARQUIVOS USADOS NA MESMA PASTA
#infousers / infousers-txt > informação usuarios
#onlines / onlines-txt > usuarios online
#criarusr / criarusr-txt > criar usuario
#userdelete  > deletar usuario infovps-txt

#IDENTIFICA USUARIO USANDO

loguin_fun () {
local msg
          msg='========================\n'
          msg+='USUARIOS LIBERADOS NO BOT\n'
          msg+='========================\n'      
	      ShellBot.sendMessage --chat_id ${message_chat_id[$id]} \
							--text "$(echo -e $msg)" \
							--parse_mode markdown
echo "$(cut -d'|' -f2 liberados)" > /tmp/liberados_var
while read lines; do
[[ "$lines" = "" ]] && break
local msg2
          msg2='========================\n'
          msg2+="Usuario: $lines\n"
          msg2+='========================\n'      
	      ShellBot.sendMessage --chat_id ${message_chat_id[$id]} \
							--text "$(echo -e $msg2)" \
							--parse_mode markdown
done <  /tmp/liberados_var
rm /tmp/liberados_var
return 0
}

blockfun () {
local msg
          msg='========================\n'
          msg+='VOCE NAO PODE USAR O BOT\n'
          msg+='========================\n'
          msg+='Opcoes bloqueadas\n'
          msg+='========================\n'
	      ShellBot.sendMessage --chat_id ${message_chat_id[$id]} \
							--text "$(echo -e $msg)" \
							--parse_mode markdown
	return 0
}


verificaruser () {
base_de_dados="./bottokens"
if [[ $(cat $base_de_dados|head -1|awk '{print $1}') = "$1" ]]; then
return 0
 else
return 1
fi
}

ativarid () {
usuario="$1"
senha="$2"
if [[ "${usr[$id]}" != "" ]]; then
local msg
          msg='========================\n'
          msg+='ACESSO JA ESTA LIBERADO\n'
          msg+='========================\n'
          msg+='usuario ja liberado\n'
          msg+='bom uso! \n'
          msg+='========================\n'
	      ShellBot.sendMessage --chat_id ${message_chat_id[$id]} \
							--text "$(echo -e $msg)" \
							--parse_mode markdown
return 0
fi
verificaruser "${usuario}:${senha}"
if [[ "$?" = "1" ]]; then
local msg
          msg='========================\n'
          msg+='VOCE NAO PODE USAR ESTE BOT\n'
          msg+='========================\n'
          msg+='Usuario ou Senha Invalidos\n'
          msg+='Tentativa de Acesso Negada\n'
          msg+='========================\n'
	      ShellBot.sendMessage --chat_id ${message_chat_id[$id]} \
							--text "$(echo -e $msg)" \
							--parse_mode markdown
	return 0
else
local msg
          msg='========================\n'
          msg+='LIBERACAO EFETUADA\n'
          msg+='========================\n'
          msg+='Agora Voce Pode Usar o Bot\n'
          msg+='A vontade, um Bom Uso! \n'
          msg+='========================\n'
	      ShellBot.sendMessage --chat_id ${message_chat_id[$id]} \
							--text "$(echo -e $msg)" \
							--parse_mode markdown
    if [[ ! -e ./bot_vars ]]; then
    echo "$chatuser" > ./liberados
    else
    cat ./bot_vars | grep -v "$chatuser" > /tmp/a && mv -f /tmp/a ./bot_vars
    echo "$chatuser" >> ./liberados
    fi
	return 0
fi
}

infovps () {
bash ./bot_codes infovps
local msg
          msg='========================\n'
          msg+='INFORMACAO DO SERVER\n'
          msg+='========================\n'
          while read line; do
          [[ "$line" = "" ]] && break
          msg+="$line\n"
          done < ./infovps-txt
          msg+='========================\n'
	      ShellBot.sendMessage --chat_id ${message_chat_id[$id]} \
							--text "$(echo -e $msg)" \
							--parse_mode markdown
	return 0
}

ajuda_fun () {
local msg
         msg="Ola Amigo!\n"
         msg+="Seja bem-vindo(a) ao Bot\n\n"
         msg+='========================\n'
         msg+='ADM-ULTIMATE BOT\n'
         msg+='========================\n'
         msg+='COMANDOS\n'
         msg+='/online (Usuarios Online)\n'
         msg+='/useradd (Adiciona Usuario)\n'
         msg+='/userdell (Remove Usuario)\n'
         msg+='/info (Informacao Usuarios)\n'
         msg+='/infovps (Informacao vps)\n'
         msg+='/usuarios (usuarios do bot)\n'         
         msg+='/gerar (gerador pay)\n'
         msg+='/logar usuario senha (libera o bot)\n'
         msg+='========================\n'
	     ShellBot.sendMessage --chat_id ${message_chat_id[$id]} \
							--text "$(echo -e $msg)" \
							--parse_mode markdown
	return 0	
}

info_fun () {
bash ./bot_codes infousers
if [ "$?" = "1" ]; then
local msg
          msg='========================\n'
          msg+="Comando Nao Foi Executado\n"
          msg+='========================\n'   
          ShellBot.sendMessage --chat_id ${message_chat_id[$id]} \
							--text "$(echo -e $msg)" \
							--parse_mode markdown
	return 0
else
    while read lines; do
    [[ "$lines" = "" ]] && break
       local msg
          user=$(echo "$lines" | awk '{print $1}')
          sen=$(echo "$lines" | awk '{print $2}')
          limit=$(echo "$lines" | awk '{print $3}')
          data=$(echo "$lines" | awk '{print $4}')
          msg='========================\n'
          msg+="Usuario: $user\n"
          msg+="Senha: $sen\n"
          msg+="Dias Restantes: $data\n"
          msg+="Limite: $limit\n"
          msg+='========================\n'   
          ShellBot.sendMessage --chat_id ${message_chat_id[$id]} \
							--text "$(echo -e $msg)" \
							--parse_mode markdown
		  unset msg
    done < ./infousers-txt
    return 0
fi
}

online_fun () {
bash ./bot_codes onlines
if [ "$?" = "1" ]; then
local msg
         msg='========================\n'
         msg+="Comando Nao Foi Executado\n"
         msg+='========================\n'   
         ShellBot.sendMessage --chat_id ${message_chat_id[$id]} \
							--text "$(echo -e $msg)" \
							--parse_mode markdown
	return 0
else
while read lines; do
[[ "$lines" = "" ]] && break
local msg
          user=$(echo "$lines" | awk '{print $1}')
          conex=$(echo "$lines" | awk '{print $2}')
          msg='========================\n' 
          msg+="Usuario: $user\n"
          msg+="Conexoes: $conex\n"
          msg+='========================\n'   
          ShellBot.sendMessage --chat_id ${message_chat_id[$id]} \
							--text "$(echo -e $msg)" \
							--parse_mode markdown
		  unset msg
done < ./onlines-txt
    return 0
fi
}

useradd_fun () {
[[ "$1" = "" ]] && exec="error"
[[ "$2" = "" ]] && exec="error"
[[ "$3" = "" ]] && exec="error"
[[ "$4" = "" ]] && exec="error"
if [ "$exec" = "error" ]; then
local msg
         msg='========================\n'
         msg+='MODO DE USO\n'
         msg+='========================\n'
         msg+='useradd usuario senha dias limite\n'
         msg+='Exemplo:\n'
         msg+='useradd admin admin 30 1\n'
         msg+='========================\n'
         ShellBot.sendMessage --chat_id ${message_chat_id[$id]} \
							--text "$(echo -e $msg)" \
							--parse_mode markdown
   return 0
fi
bash ./bot_codes criarusr "$1" "$2" "$3" "$4"
if [ "$?" = "1" ]; then
local msg
         msg='========================\n'
         msg+="Usuario Nao Foi Criado\n"
         msg+='========================\n'   
         ShellBot.sendMessage --chat_id ${message_chat_id[$id]} \
							--text "$(echo -e $msg)" \
							--parse_mode markdown
return 0
else
while read lines; do
[[ "$lines" = "" ]] && break
local msg
          usr=$(echo "$lines" | awk '{print $1}')
          sen=$(echo "$lines"  | awk '{print $2}')
          dia=$(echo "$lines" | awk '{print $3}')
          limit=$(echo "$lines" | awk '{print $4}')
          msg='========================\n'
          msg+='USUARIO CRIADO\n'
          msg+="Usuario: $usr\n"
          msg+="Senha: $sen\n"
          msg+="Duracao: $dia\n"
          msg+="Limite: $limit\n"
          msg+='========================\n'   
          ShellBot.sendMessage --chat_id ${message_chat_id[$id]} \
							--text "$(echo -e $msg)" \
							--parse_mode markdown
		  unset msg
done < ./criarusr-txt
return 0
fi
}

userdell_fun () {
[[ "$1" = "" ]] && exec="error"
if [ "$exec" = "error" ]; then
local msg
         msg='========================\n'
         msg+='MODO DE USO\n'
         msg+='========================\n'
         msg+='userdell usuario\n'
         msg+='Exemplo:\n'
         msg+='userdell admin\n'
         msg+='========================\n'
	     ShellBot.sendMessage --chat_id ${message_chat_id[$id]} \
							--text "$(echo -e $msg)" \
							--parse_mode markdown
   return 0
fi
bash ./bot_codes userdelete "$1"
if [ "$?" = "1" ]; then
local msg
          msg='========================\n'
          msg+="Usuario nao Foi Excluido\n"
          msg+='========================\n'   
          ShellBot.sendMessage --chat_id ${message_chat_id[$id]} \
							--text "$(echo -e $msg)" \
							--parse_mode markdown
return 0
else
local msg
          msg='========================\n'
          msg+="Removido Com Sucesso!\n"
          msg+='========================\n'   
          ShellBot.sendMessage --chat_id ${message_chat_id[$id]} \
							--text "$(echo -e $msg)" \
							--parse_mode markdown
return 0
fi
}

paygen_fun () {
[[ "$1" = "" ]] && fail="0"
[[ "$2" = "" ]] && fail="0"
[[ "$3" = "" ]] && fail="0"
if [[ "$fail" = "0" ]]; then
local msg
          msg+='========================\n'
          msg+="Modo de uso:\n"
          msg+="/gerar host requisicao conexao\n"
          msg+="Exemplo:\n"
          msg+="/gerar claro.com 1/9 1/3\n"
          msg+="METODOS REQUISICAO\n1-GET, 2-CONNECT, 3-PUT, 4-OPTIONS, 5-DELETE, 6-HEAD, 7-TRACE, 8-PROPATCH, 9-PATCH\n"
          msg+="METODOS CONEXAO\n1-REALDATA, 2-NETDATA, 3-RAW\n"
          msg+='========================\n'  
          ShellBot.sendMessage --chat_id ${message_chat_id[$id]} \
							--text "$(echo -e $msg)" \
							--parse_mode markdown
		  unset msg
return 0
fi
host="$1"
req="$2"
conex="$3"
bash ./bot_codes paygen "$host" "$req" "$conex"
if [ "$?" = "0" ]; then
local msg
          msg+='========================\n'
          msg+='PAYLOADS GERADAS COM SUCESSO\n'  
          msg+='========================\n'  
          ShellBot.sendMessage --chat_id ${message_chat_id[$id]} \
							--text "$(echo -e $msg)" \
							--parse_mode markdown
local msg2
          ShellBot.sendDocument --chat_id ${message_chat_id[$id]} \
                             --document @$HOME/payloads.txt
return 0                           
else
local msg
          msg+='========================\n'
          msg+='PAYLOADS NAO GERADAS\n' 
          msg+='Algo deu Errado!\n'  
          msg+='========================\n'  
          ShellBot.sendMessage --chat_id ${message_chat_id[$id]} \
							--text "$(echo -e $msg)" \
							--parse_mode markdown
return 0
fi
}

while :
do
	ShellBot.getUpdates --limit 100 --offset $(ShellBot.OffsetNext) --timeout 30
	for id in $(ShellBot.ListUpdates); do	
	(		
		case ${message_text[$id]} in
		*)
		:
        comando=(${message_text[$id]})
        chatuser=$(ShellBot.getChat --chat_id ${message_chat_id[$id]})
        [[ "${comando[0]}" = "teste" ]] && teste
        [[ ! -e ./liberados ]] && touch ./liberados
		[[ "${comando[0]}" = "ajuda" || "${comando[0]}" = "/ajuda" ]] && ajuda_fun
        [[ "${comando[0]}" = "start" || "${comando[0]}" = "/start" ]] && ajuda_fun
        [[ "${comando[0]}" = "logar" || "${comando[0]}" = "/logar" ]] && ativarid "${comando[1]}" "${comando[2]}"
        if [[ "$(cat ./liberados|grep "$chatuser")" != "" ]]; then
        [[ "${comando[0]}" = "online" || "${comando[0]}" = "/online" ]] && online_fun
        [[ "${comando[0]}" = "useradd" || "${comando[0]}" = "/useradd" ]] && useradd_fun "${comando[1]}" "${comando[2]}" "${comando[3]}" "${comando[4]}"
        [[ "${comando[0]}" = "userdell" || "${comando[0]}" = "/userdell" ]] && userdell_fun "${comando[1]}"
        [[ "${comando[0]}" = "info" || "${comando[0]}" = "/info" ]] && info_fun
        [[ "${comando[0]}" = "infovps" || "${comando[0]}" = "/infovps" ]] && infovps
        [[ "${comando[0]}" = "gerar" || "${comando[0]}" = "/gerar" ]] && paygen_fun "${comando[1]}" "${comando[2]}" "${comando[3]}"
        [[ "${comando[0]}" = "usuarios" || "${comando[0]}" = "/usuarios" ]] && loguin_fun
        else
        [[ "${comando[0]}" != "" ]] && blockfun
        fi
	    ;;
		esac
    ) & 
	done
done
#FIM
